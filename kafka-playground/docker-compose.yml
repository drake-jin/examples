version: '3.7'

# Following reference
# Link: https://github.com/confluentinc/cp-docker-images/blob/5.3.3-post/examples/kafka-cluster/docker-compose.yml

services:
  # ============================================================= zookeeper cluster ========================================================================
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
  # ============================================================= kafka cluster ========================================================================
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # ============================================================= kafka-kafdrop ========================================================================
  kafka-kafdrop:
    image: obsidiandynamics/kafdrop
    hostname: kafka-kafdrop
    container_name: kafka-kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka
  # ============================================================= Kafka Schema Registry ========================================================================
  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: kafka-schema-registry
    container_name: kafka-schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - kafka

  # 개요: kafka-schema-registry 이걸 좀 더 쉽게 다루기 위해 존재하는 web ui 툴
  kafka-schema-registry-ui:
    image: landoop/schema-registry-ui:latest
    hostname: kafka-schema-registry-ui
    container_name: kafka-schema-registry-ui
    ports:
      - "8000:8000"
    environment:
      SCHEMAREGISTRY_URL: http://kafka-schema-registry:8081
      PROXY: "true"
    depends_on:
      - kafka-schema-registry

  # ============================================================= Kafka Connector ========================================================================
  kafka-connect-ui:
    image: landoop/kafka-connect-ui:latest
    hostname: kafka-connect-ui
    container_name: kafka-connect-ui
    ports:
      - "8001:8000"
    environment:
      CONNECT_URL: "http://kafka-connect-datagen:8083"
      PROXY: "true"
    depends_on:
      - kafka-connect-datagen

  kafka-connect-datagen:
    image: cnfldemos/kafka-connect-datagen:0.3.2-5.5.0
    hostname: kafka-connect-datagen
    container_name: kafka-connect-datagen
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
      CONNECT_GROUP_ID: compose-connect-group

      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: connect

      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1

      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1

      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1

      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081

      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter

      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/etc/kafka-connect/jars
      CONNECT_LOG4J_LOGGERS: org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR
    volumes:
      - ./connectors:/usr/share/confluent-hub-components/confluentinc-kafka-connect-datagen/etc/custom
    depends_on:
      - kafka-schema-registry
