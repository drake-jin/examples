########################## Metricbeat Configuration ###########################

#============================  Config Reloading ===============================

# Config reloading allows to dynamically load modules. Each file which is
# monitored must contain one or multiple modules as a list.
metricbeat.config.modules:

  # Glob pattern for configuration reloading
  path: ${path.config}/modules.d/*.yml

  # Period on which files under path should be checked for changes
  reload.period: 10s

  # Set to true to enable config reloading
  reload.enabled: false

# Maximum amount of time to randomly delay the start of a metricset. Use 0 to
# disable startup delay.
metricbeat.max_start_delay: 10s

  #============================== Autodiscover ===================================

  # Autodiscover allows you to detect changes in the system and spawn new modules
  # as they happen.

  #metricbeat.autodiscover:
# List of enabled autodiscover providers
#  providers:
#    - type: docker
#      templates:
#        - condition:
#            equals.docker.container.image: etcd
#          config:
#            - module: etcd
#              metricsets: ["leader", "self", "store"]
#              period: 10s
#              hosts: ["${host}:2379"]

#=========================== Timeseries instance ===============================

# Enabling this will add a `timeseries.instance` keyword field to all metric
# events. For a given metricset, this field will be unique for every single item
# being monitored.
# This setting is experimental.

#timeseries.enabled: false


#==========================  Modules configuration =============================
metricbeat.modules:

  #-------------------------------- System Module --------------------------------
  - module: system
    metricsets:
      - cpu             # CPU usage
      - load            # CPU load averages
      - memory          # Memory usage
      - network         # Network IO
      - process         # Per process metrics
      - process_summary # Process summary
      - uptime          # System Uptime
      - socket_summary  # Socket summary
      - core           # Per CPU core usage
      - diskio         # Disk IO
      - filesystem     # File system usage for each mountpoint
      - fsstat         # File system summary metrics
      - raid           # Raid
      - socket         # Sockets and connection info (linux only)
      - service        # systemd service information
    enabled: false
    period: 10s
    processes: ['.*']

    # Configure the metric types that are included by these metricsets.
    cpu.metrics:  ["percentages","normalized_percentages"]  # The other available option is ticks.
    core.metrics: ["percentages"]  # The other available option is ticks.

      # A list of filesystem types to ignore. The filesystem metricset will not
      # collect data from filesystems matching any of the specified types, and
      # fsstats will not include data from these filesystems in its summary stats.
      # If not set, types associated to virtual filesystems are automatically
      # added when this information is available in the system (e.g. the list of
      # `nodev` types in `/proc/filesystem`).
      #filesystem.ignore_types: []

      # These options allow you to filter out all processes that are not
      # in the top N by CPU or memory, in order to reduce the number of documents created.
      # If both the `by_cpu` and `by_memory` options are used, the union of the two sets
      # is included.
      #process.include_top_n:

      # Set to false to disable this feature and include all processes
      #enabled: true

      # How many processes to include from the top by CPU. The processes are sorted
      # by the `system.process.cpu.total.pct` field.
      #by_cpu: 0

      # How many processes to include from the top by memory. The processes are sorted
      # by the `system.process.memory.rss.bytes` field.
    #by_memory: 0

    # If false, cmdline of a process is not cached.
    #process.cmdline.cache.enabled: true

    # Enable collection of cgroup metrics from processes on Linux.
    #process.cgroups.enabled: true

    # A list of regular expressions used to whitelist environment variables
    # reported with the process metricset's events. Defaults to empty.
    #process.env.whitelist: []

    # Include the cumulative CPU tick values with the process metrics. Defaults
    # to false.
    #process.include_cpu_ticks: false

    # Raid mount point to monitor
    #raid.mount_point: '/'

    # Configure reverse DNS lookup on remote IP addresses in the socket metricset.
    #socket.reverse_lookup.enabled: false
    #socket.reverse_lookup.success_ttl: 60s
    #socket.reverse_lookup.failure_ttl: 60s

    # Diskio configurations
    #diskio.include_devices: []

    # Filter systemd services by status or sub-status
    #service.state_filter: ["active"]

    # Filter systemd services based on a name pattern
    #service.pattern_filter: ["ssh*", "nfs*"]


  #---------------------------- Elasticsearch Module ----------------------------
  - module: elasticsearch
    metricsets:
      - cluster_stats
      - index
      - index_recovery
      - index_summary
      - ml_job
      - node_stats
      - shard
      - enrich
    period: 10s
    hosts: ["http://elasticsearch:9200"]
    xpack.enabled: true

    #username: "elastic"
    #password: "changeme"
    #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

    # Set to false to fetch all entries
    #index_recovery.active_only: true

# ================================== Outputs ===================================
# ---------------------------- Elasticsearch Output ----------------------------
output.elasticsearch:
  enabled: true

  # Array of hosts to connect to.
  # Scheme and port can be left out and will be set to the default (http and 9200)
  # In case you specify and additional path, the scheme is required: http://localhost:9200/path
  # IPv6 addresses should always be defined as: https://[2001:db8::1]:9200
  hosts: ["elasticsearch:9200"]

    # Set gzip compression level.
    #compression_level: 0

    # Configure escaping HTML symbols in strings.
    #escape_html: false

    # Protocol - either `http` (default) or `https`.
    #protocol: "https"

    # Authentication credentials - either API key or username/password.
    #api_key: "id:api_key"
    #username: "elastic"
    #password: "changeme"

    # Dictionary of HTTP parameters to pass within the URL with index operations.
    #parameters:
    #param1: value1
    #param2: value2

    # Number of workers per Elasticsearch host.
    #worker: 1

    # Optional index name. The default is "metricbeat" plus date
    # and generates [metricbeat-]YYYY.MM.DD keys.
    # In case you modify this pattern you must update setup.template.name and setup.template.pattern accordingly.
    #index: "metricbeat-%{[agent.version]}-%{+yyyy.MM.dd}"

    # Optional ingest node pipeline. By default no pipeline will be used.
    #pipeline: ""

    # Optional HTTP path
    #path: "/elasticsearch"

    # Custom HTTP headers to add to each request
    #headers:
    #  X-My-Header: Contents of the header

    # Proxy server URL
    #proxy_url: http://proxy:3128

    # Whether to disable proxy settings for outgoing connections. If true, this
    # takes precedence over both the proxy_url field and any environment settings
    # (HTTP_PROXY, HTTPS_PROXY). The default is false.
    #proxy_disable: false

    # The number of times a particular Elasticsearch index operation is attempted. If
    # the indexing operation doesn't succeed after this many retries, the events are
    # dropped. The default is 3.
    #max_retries: 3

    # The maximum number of events to bulk in a single Elasticsearch bulk API index request.
    # The default is 50.
    #bulk_max_size: 50

    # The number of seconds to wait before trying to reconnect to Elasticsearch
    # after a network error. After waiting backoff.init seconds, the Beat
    # tries to reconnect. If the attempt fails, the backoff timer is increased
    # exponentially up to backoff.max. After a successful connection, the backoff
    # timer is reset. The default is 1s.
    #backoff.init: 1s

    # The maximum number of seconds to wait before attempting to connect to
    # Elasticsearch after a network error. The default is 60s.
    #backoff.max: 60s

    # Configure HTTP request timeout before failing a request to Elasticsearch.
    #timeout: 90

    # ------------------------------ Logstash Output -------------------------------
    #output.logstash:
    # Boolean flag to enable or disable the output module.
    #enabled: true

    # The Logstash hosts
    #hosts: ["localhost:5044"]

    # Number of workers per Logstash host.
    #worker: 1

    # Set gzip compression level.
    #compression_level: 3

    # Configure escaping HTML symbols in strings.
    #escape_html: false

    # Optional maximum time to live for a connection to Logstash, after which the
    # connection will be re-established.  A value of `0s` (the default) will
    # disable this feature.
    #
    # Not yet supported for async connections (i.e. with the "pipelining" option set)
    #ttl: 30s

    # Optionally load-balance events between Logstash hosts. Default is false.
    #loadbalance: false

    # Number of batches to be sent asynchronously to Logstash while processing
    # new batches.
    #pipelining: 2

    # If enabled only a subset of events in a batch of events is transferred per
    # transaction.  The number of events to be sent increases up to `bulk_max_size`
    # if no error is encountered.
    #slow_start: false

    # The number of seconds to wait before trying to reconnect to Logstash
    # after a network error. After waiting backoff.init seconds, the Beat
    # tries to reconnect. If the attempt fails, the backoff timer is increased
    # exponentially up to backoff.max. After a successful connection, the backoff
    # timer is reset. The default is 1s.
    #backoff.init: 1s

    # The maximum number of seconds to wait before attempting to connect to
    # Logstash after a network error. The default is 60s.
    #backoff.max: 60s

    # Optional index name. The default index name is set to metricbeat
    # in all lowercase.
    #index: 'metricbeat'

    # SOCKS5 proxy server URL
    #proxy_url: socks5://user:password@socks5-server:2233

    # Resolve names locally when using a proxy server. Defaults to false.
    #proxy_use_local_resolver: false

    # Enable SSL support. SSL is automatically enabled if any SSL setting is set.
    #ssl.enabled: true

    # Configure SSL verification mode. If `none` is configured, all server hosts
    # and certificates will be accepted. In this mode, SSL based connections are
    # susceptible to man-in-the-middle attacks. Use only for testing. Default is
    # `full`.
    #ssl.verification_mode: full

    # List of supported/valid TLS versions. By default all TLS versions from 1.1
    # up to 1.3 are enabled.
    #ssl.supported_protocols: [TLSv1.1, TLSv1.2, TLSv1.3]

    # Optional SSL configuration options. SSL is off by default.
    # List of root certificates for HTTPS server verifications
    #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

    # Certificate for SSL client authentication
    #ssl.certificate: "/etc/pki/client/cert.pem"

    # Client certificate key
    #ssl.key: "/etc/pki/client/cert.key"

    # Optional passphrase for decrypting the Certificate Key.
    #ssl.key_passphrase: ''

    # Configure cipher suites to be used for SSL connections
    #ssl.cipher_suites: []

    # Configure curve types for ECDHE-based cipher suites
    #ssl.curve_types: []

    # Configure what types of renegotiation are supported. Valid options are
    # never, once, and freely. Default is never.
    #ssl.renegotiation: never

    # Configure a pin that can be used to do extra validation of the verified certificate chain,
    # this allow you to ensure that a specific certificate is used to validate the chain of trust.
    #
    # The pin is a base64 encoded string of the SHA-256 fingerprint.
    #ssl.ca_sha256: ""

    # The number of times to retry publishing an event after a publishing failure.
    # After the specified number of retries, the events are typically dropped.
    # Some Beats, such as Filebeat and Winlogbeat, ignore the max_retries setting
    # and retry until all events are published.  Set max_retries to a value less
    # than 0 to retry until all events are published. The default is 3.
    #max_retries: 3

    # The maximum number of events to bulk in a single Logstash request. The
    # default is 2048.
    #bulk_max_size: 2048

    # The number of seconds to wait for responses from the Logstash server before
    # timing out. The default is 30s.
    #timeout: 30s


# ================================== Template ==================================

# A template is used to set the mapping in Elasticsearch
# By default template loading is enabled and the template is loaded.
# These settings can be adjusted to load your own template or overwrite existing ones.

# Set to false to disable template loading.
#setup.template.enabled: true

# Template name. By default the template name is "metricbeat-%{[agent.version]}"
# The template name and pattern has to be set in case the Elasticsearch index pattern is modified.
#setup.template.name: "metricbeat-%{[agent.version]}"

# Template pattern. By default the template pattern is "-%{[agent.version]}-*" to apply to the default index settings.
# The first part is the version of the beat and then -* is used to match all daily indices.
# The template name and pattern has to be set in case the Elasticsearch index pattern is modified.
#setup.template.pattern: "metricbeat-%{[agent.version]}-*"

# Path to fields.yml file to generate the template
#setup.template.fields: "${path.config}/fields.yml"

# A list of fields to be added to the template and Kibana index pattern. Also
# specify setup.template.overwrite: true to overwrite the existing template.
#setup.template.append_fields:
#- name: field_name
#  type: field_type

# Enable JSON template loading. If this is enabled, the fields.yml is ignored.
#setup.template.json.enabled: false

# Path to the JSON template file
#setup.template.json.path: "${path.config}/template.json"

# Name under which the template is stored in Elasticsearch
#setup.template.json.name: ""

# Overwrite existing template
#setup.template.overwrite: false

# Elasticsearch template settings
# setup.template.settings:

# A dictionary of settings to place into the settings.index dictionary
# of the Elasticsearch template. For more details, please check
# https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html
#index:
#number_of_shards: 1
#codec: best_compression

# A dictionary of settings for the _source field. For more details, please check
# https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-source-field.html
#_source:
#enabled: false

# ====================== Index Lifecycle Management (ILM) ======================

# Configure index lifecycle management (ILM). These settings create a write
# alias and add additional settings to the index template. When ILM is enabled,
# output.elasticsearch.index is ignored, and the write alias is used to set the
# index name.

# Enable ILM support. Valid values are true, false, and auto. When set to auto
# (the default), the Beat uses index lifecycle management when it connects to a
# cluster that supports ILM; otherwise, it creates daily indices.
#setup.ilm.enabled: auto

# Set the prefix used in the index lifecycle write alias name. The default alias
# name is 'metricbeat-%{[agent.version]}'.
#setup.ilm.rollover_alias: 'metricbeat'

# Set the rollover index pattern. The default is "%{now/d}-000001".
#setup.ilm.pattern: "{now/d}-000001"

# Set the lifecycle policy name. The default policy name is
# 'beatname'.
#setup.ilm.policy_name: "mypolicy"

# The path to a JSON file that contains a lifecycle policy configuration. Used
# to load your own lifecycle policy.
#setup.ilm.policy_file:

# Disable the check for an existing lifecycle policy. The default is true. If
# you disable this check, set setup.ilm.overwrite: true so the lifecycle policy
# can be installed.
#setup.ilm.check_exists: true

# Overwrite the lifecycle policy at startup. The default is false.
#setup.ilm.overwrite: false


# ================================== Logging ===================================

# There are four options for the log output: file, stderr, syslog, eventlog
# The file output is the default.

# Sets log level. The default log level is info.
# Available log levels are: error, warning, info, debug
#logging.level: info

# Enable debug output for selected components. To enable all selectors use ["*"]
# Other available selectors are "beat", "publish", "service"
# Multiple selectors can be chained.
#logging.selectors: [ ]

# Send all logging output to stderr. The default is false.
#logging.to_stderr: false

# Send all logging output to syslog. The default is false.
#logging.to_syslog: false

# Send all logging output to Windows Event Logs. The default is false.
#logging.to_eventlog: false

# If enabled, Metricbeat periodically logs its internal metrics that have changed
# in the last period. For each metric that changed, the delta from the value at
# the beginning of the period is logged. Also, the total values for
# all non-zero internal metrics are logged on shutdown. The default is true.
#logging.metrics.enabled: true

# The period after which to log the internal metrics. The default is 30s.
#logging.metrics.period: 30s

# Logging to rotating files. Set logging.to_files to false to disable logging to
# files.
logging.to_files: true
logging.files:
# Configure the path where the logs are written. The default is the logs directory
# under the home path (the binary location).
#path: /var/log/metricbeat

# The name of the files where the logs are written to.
#name: metricbeat

# Configure log file size limit. If limit is reached, log file will be
# automatically rotated
#rotateeverybytes: 10485760 # = 10MB

# Number of rotated log files to keep. Oldest files will be deleted first.
#keepfiles: 7

# The permissions mask to apply when rotating log files. The default value is 0600.
# Must be a valid Unix-style file permissions mask expressed in octal notation.
#permissions: 0600

# Enable log file rotation on time intervals in addition to size-based rotation.
# Intervals must be at least 1s. Values of 1m, 1h, 24h, 7*24h, 30*24h, and 365*24h
# are boundary-aligned with minutes, hours, days, weeks, months, and years as
# reported by the local system clock. All other intervals are calculated from the
# Unix epoch. Defaults to disabled.
#interval: 0

# Rotate existing logs on startup rather than appending to the existing
# file. Defaults to true.
# rotateonstartup: true

# Set to true to log messages in JSON format.
#logging.json: false

# Set to true, to log messages with minimal required Elastic Common Schema (ECS)
# information. Recommended to use in combination with `logging.json=true`
# Defaults to false.
#logging.ecs: false

# ============================= X-Pack Monitoring ==============================
# Metricbeat can export internal metrics to a central Elasticsearch monitoring
# cluster.  This requires xpack monitoring to be enabled in Elasticsearch.  The
# reporting is disabled by default.

# Set to true to enable the monitoring reporter.
monitoring.enabled: true

# Sets the UUID of the Elasticsearch cluster under which monitoring data for this
# Metricbeat instance will appear in the Stack Monitoring UI. If output.elasticsearch
# is enabled, the UUID is derived from the Elasticsearch cluster referenced by output.elasticsearch.
#monitoring.cluster_uuid:

# Uncomment to send the metrics to Elasticsearch. Most settings from the
# Elasticsearch output are accepted here as well.
# Note that the settings should point to your Elasticsearch *monitoring* cluster.
# Any setting that is not set is automatically inherited from the Elasticsearch
# output configuration, so if you have the Elasticsearch output configured such
# that it is pointing to your Elasticsearch monitoring cluster, you can simply
# uncomment the following line.
monitoring.elasticsearch: search-monitoring.prod.ca.krmt.io:80

# Array of hosts to connect to.
# Scheme and port can be left out and will be set to the default (http and 9200)
# In case you specify and additional path, the scheme is required: http://localhost:9200/path
# IPv6 addresses should always be defined as: https://[2001:db8::1]:9200
hosts: ["http://localhost:9200"]

# Set gzip compression level.
#compression_level: 0

# Protocol - either `http` (default) or `https`.
#protocol: "https"

# Authentication credentials - either API key or username/password.
#api_key: "id:api_key"
#username: "beats_system"
#password: "changeme"

# Dictionary of HTTP parameters to pass within the URL with index operations.
#parameters:
#param1: value1
#param2: value2

# Custom HTTP headers to add to each request
#headers:
#  X-My-Header: Contents of the header

# Proxy server url
#proxy_url: http://proxy:3128

# The number of times a particular Elasticsearch index operation is attempted. If
# the indexing operation doesn't succeed after this many retries, the events are
# dropped. The default is 3.
#max_retries: 3

# The maximum number of events to bulk in a single Elasticsearch bulk API index request.
# The default is 50.
#bulk_max_size: 50

# The number of seconds to wait before trying to reconnect to Elasticsearch
# after a network error. After waiting backoff.init seconds, the Beat
# tries to reconnect. If the attempt fails, the backoff timer is increased
# exponentially up to backoff.max. After a successful connection, the backoff
# timer is reset. The default is 1s.
#backoff.init: 1s

# The maximum number of seconds to wait before attempting to connect to
# Elasticsearch after a network error. The default is 60s.
#backoff.max: 60s

# Configure HTTP request timeout before failing an request to Elasticsearch.
#timeout: 90

# Use SSL settings for HTTPS.
#ssl.enabled: true

# Configure SSL verification mode. If `none` is configured, all server hosts
# and certificates will be accepted. In this mode, SSL based connections are
# susceptible to man-in-the-middle attacks. Use only for testing. Default is
# `full`.
#ssl.verification_mode: full

# List of supported/valid TLS versions. By default all TLS versions from 1.1
# up to 1.3 are enabled.
#ssl.supported_protocols: [TLSv1.1, TLSv1.2, TLSv1.3]

# SSL configuration. The default is off.
# List of root certificates for HTTPS server verifications
#ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

# Certificate for SSL client authentication
#ssl.certificate: "/etc/pki/client/cert.pem"

# Client certificate key
#ssl.key: "/etc/pki/client/cert.key"

# Optional passphrase for decrypting the certificate key.
#ssl.key_passphrase: ''

# Configure cipher suites to be used for SSL connections
#ssl.cipher_suites: []

# Configure curve types for ECDHE-based cipher suites
#ssl.curve_types: []

# Configure what types of renegotiation are supported. Valid options are
# never, once, and freely. Default is never.
#ssl.renegotiation: never

#metrics.period: 10s
#state.period: 1m

# =============================== HTTP Endpoint ================================

# Each beat can expose internal metrics through a HTTP endpoint. For security
# reasons the endpoint is disabled by default. This feature is currently experimental.
# Stats can be access through http://localhost:5066/stats . For pretty JSON output
# append ?pretty to the URL.

# Defines if the HTTP endpoint is enabled.
#http.enabled: false

# The HTTP endpoint will bind to this hostname, IP address, unix socket or named pipe.
# When using IP addresses, it is recommended to only use localhost.
#http.host: localhost

# Port on which the HTTP endpoint will bind. Default is 5066.
#http.port: 5066

# Define which user should be owning the named pipe.
#http.named_pipe.user:

# Define which the permissions that should be applied to the named pipe, use the Security
# Descriptor Definition Language (SDDL) to define the permission. This option cannot be used with
# `http.user`.
#http.named_pipe.security_descriptor:

# ================================= Migration ==================================

# This allows to enable 6.7 migration aliases
#migration.6_to_7.enabled: false